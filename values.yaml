# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: openworklabs/lotus:v0.4.1
  pullPolicy: IfNotPresent #Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext:
  fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: false
  runAsUser: 1000

service:
  # API service
  type: ClusterIP
  port: 1234
  targetPort: 1234

ingress:
  enabled: true
  hosts:
  #- api.openworklabs.com
  annotations:
    nginx.ingress.kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Length,Content-Range,Range"
    nginx.ingress.kubernetes.io/enable-rewrite-log: "true"
  #  nginx.ingress.kubernetes.io/server-alias: "_"
  #  cert-manager.io/cluster-issuer: "letsencrypt-staging"
  #  cert-manager.io/cluster-issuer: "letsencrypt-prod"
  #  tls:
  #  - secretName: lotus-api-tls
  #    hosts:
  #      - api.openworklabs.com
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecRuleEngine On
      SecDebugLog /tmp/modsec_debug.log

ingressApi:
  enabled: false
  hosts:
  - api.openworklabs.com
  annotations:
    nginx.ingress.kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Length,Content-Range,Range"
    # cert-manager.io/cluster-issuer: "letsencrypt-staging"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  #tls:
  #  - secretName: lotus-api-tls
  #    hosts:
  #      - api.openworklabs.com       

init:
  sync:
    enabled: true
  import:
    enabled: false
    # ideally a shared volume containing chain dump
    volume: {}
      #- name: filecoin-chain-vol
      #  persistentVolumeClaim:
      #    claimName: efs-claim

secretVolume:
  enabled: false

resources: #{}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  requests:
    cpu: 1000m
    memory: 4Gi
  limits:
    cpu: 3000m
    memory: 12Gi

persistence:
  enabled: true
  ## Filecoin data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  lotus:
    size: "200Gi"
    storageClassName: gp2
    accessModes:
      - ReadWriteOnce
  ipfs:
    size: "200Gi"
    storageClassName: gp2
    accessModes:
      - ReadWriteOnce
  powergate:
    size: "200Gi"
    storageClassName: gp2
    accessModes:
      - ReadWriteOnce

Powergate:
  enabled: false

IPFS:
  enabled: false
  
nodeSelector: {}

tolerations: []

affinity: {}
